image: docker:latest

services:
  - docker:dind

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.build:
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_DEFAULT_BRANCH || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_DEFAULT_BRANCH --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .

# When pushing to `main` / `master` branch, tag image as `main` / `master`
main_branch_CI:
  extends: .build
  after_script:
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

# When a commit is tagged for release, tag image as the version name and 'latest'
release_tag_CI:
  extends: .build
  after_script:
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  rules:
    - if: $CI_COMMIT_TAG

# When performing merge request to `main` / `master` branch, try building the image but do not push
merge_request_CI:
  extends: .build
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
